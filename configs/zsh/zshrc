# Path to your oh-my-zsh installation.
export ZSH=$HOME/.oh-my-zsh

# Set name of the theme to load.
# Look in ~/.oh-my-zsh/themes/
# Optionally, if you set this to "random", it'll load a random theme each
# time that oh-my-zsh is loaded.
ZSH_THEME="agnoster"

DEFAULT_USER="Isulew"

#######################################################################
#                            Alias - Start                            #
#######################################################################

# Example aliases
# alias zshconfig="mate ~/.zshrc"
# alias ohmyzsh="mate ~/.oh-my-zsh"
alias cls='clear'
alias ll='ls -l'
alias la='ls -a'
alias vi='vim'
alias javac="javac -J-Dfile.encoding=utf8"
alias grep="grep --color=auto"
alias -s html=vi   # 在命令行直接输入后缀为 html 的文件名，会在 vim 中打开,如果想用TextMate打开可以将vi改成mate
alias -s rb=vi     # 在命令行直接输入 ruby 文件，会在 vim 中打开
alias -s py=vi       # 在命令行直接输入 python 文件，会用 vim 中打开，以下类似
alias -s js=vi
alias -s c=vi
alias -s java=vi
alias -s txt=vi
alias -s gz='tar -xzvf'  #表示自动解压后缀为 gz 的压缩包。
alias -s tgz='tar -xzvf'
alias -s zip='unzip'
alias -s bz2='tar -xjvf'
alias vim='/usr/local/bin/vim'
alias vimdiff='/usr/local/bin/vimdiff'
alias vimtutor='/usr/local/bin/vimtutor'
alias gowp='/Volumes/SHARE/WebProject/'
alias aria2rpc='aria2c --conf-path=/Users/Isulew/.aria2/aria2.conf -D'
alias stree='/Applications/SourceTree.app/Contents/Resources/stree'

# Filesystem
alias ..='cd ..'            # Go up one directory
alias ...='cd ../..'        # Go up two directories
alias ....='cd ../../..'    # And for good measure
alias ls='ls --color=auto'  # gimmie colors
alias l='ls -lah --color=auto'   # Long view, show hidden
alias la='ls -AF --color=auto'   # Compact view, show hidden

# Helpers
alias grep='grep --color=auto' # Always highlight grep search term
alias ping='ping -c 5'      # Pings with 5 packets, not unlimited
alias df='df -h'            # Disk free, in gigabytes, not bytes
alias du='du -h -c'         # Calculate total disk usage for a folder
alias svim="sudo vim" # Run vim as super user

# GIT ALIASES
alias g=git
alias ga='git add'
alias gb='git branch'
alias gba='git branch -a'
alias gc='git commit -v'
alias gl='git pull'
alias gp='git push'
alias gst='git status -sb'
#alias gsd='git svn dcommit'
#alias gsr='git svn rebase'
alias gs='git stash'
alias gsa='git stash apply'
#alias gr='git stash && git svn rebase && git svn dcommit && git stash pop' # git refresh
#alias gd='git diff | $GIT_EDITOR -'
#alias gmv='git mv'
#alias gho='$(git remote -v 2> /dev/null | grep github | sed -e "s/.*git\:\/\/\([a-z]\.\)*/\1/" -e "s/\.git.*//g" -e "s/.*@\(.*\)$/\1/g" | tr ":" "/" | tr -d "\011" | sed -e "s/^/open http:\/\//g" | uniq)'
alias gsu='git submodule update --remote --merge' # Update each submodule to the latest commits 

#######################################################################
#                             Alias - End                             #
#######################################################################

#######################################################################
#                    ZSH Custom Configuration - Start                     #
#######################################################################

#
# Uncomment the following line to use case-sensitive completion.
# CASE_SENSITIVE="true"

# Uncomment the following line to disable bi-weekly auto-update checks.
# DISABLE_AUTO_UPDATE="true"

# Uncomment the following line to change how often to auto-update (in days).
# export UPDATE_ZSH_DAYS=13

# Uncomment the following line to disable colors in ls.
# DISABLE_LS_COLORS="true"

# Uncomment the following line to disable auto-setting terminal title.
# DISABLE_AUTO_TITLE="true"

# Uncomment the following line to disable command auto-correction.
# DISABLE_CORRECTION="true"

# Uncomment the following line to display red dots whilst waiting for completion.
# COMPLETION_WAITING_DOTS="true"

# Uncomment the following line if you want to disable marking untracked files
# under VCS as dirty. This makes repository status check for large repositories
# much, much faster.
# DISABLE_UNTRACKED_FILES_DIRTY="true"

# Uncomment the following line if you want to change the command execution time
# stamp shown in the history command output.
# The optional three formats: "mm/dd/yyyy"|"dd.mm.yyyy"|"yyyy-mm-dd"
# HIST_STAMPS="mm/dd/yyyy"

# Would you like to use another custom folder than $ZSH/custom?
# ZSH_CUSTOM=/path/to/new-custom-folder

# Which plugins would you like to load? (plugins can be found in ~/.oh-my-zsh/plugins/*)
# Custom plugins may be added to ~/.oh-my-zsh/custom/plugins/
# Example format: plugins=(rails git textmate ruby lighthouse)
plugins=(git github brew textmate osx python cp svn pip go golang autojump)

source $ZSH/oh-my-zsh.sh

#######################################################################
#                     ZSH Custom Configuration - End                      #
#######################################################################

#######################################################################
#                     User Configuration - Start                      #
#######################################################################

#############
#  General  #
#############

export GOPATH="/Users/Isulew/Apps/golang"
export PATH="/usr/local/opt/go/libexec/bin:$GOPATH/bin:/usr/local/opt/coreutils/libexec/gnubin:$PATH"
export PATH="/usr/local/sbin:$PATH"
#export EDITOR="/usr/local/bin/mate -w"
export EDITOR="/usr/local/bin/vim"
# export MANPATH="/usr/local/man:$MANPATH"

# You may need to manually set your language environment

export LC_ALL=en_US.UTF-8
export LANG=en_US.UTF-8

# Preferred editor for local and remote sessions
# if [[ -n $SSH_CONNECTION ]]; then
#   export EDITOR='vim'
# else
#   export EDITOR='mvim'
# fi

# Compilation flags
# export ARCHFLAGS="-arch x86_64"

# ssh
# export SSH_KEY_PATH="~/.ssh/dsa_id"
#

#########
#  FZF  #
#########

# --files: List files that would be searched but do not search
# --no-ignore: Do not respect .gitignore, etc...
# --hidden: Search hidden files and folders
# --follow: Follow symlinks
# --glob: Additional conditions for search (in this case ignore everything in the .git/ folder)
export FZF_DEFAULT_COMMAND='rg --files --no-ignore --hidden --follow --glob "!.git/*"'
# export ZSH_HIGHLIGHT_HIGHLIGHTERS_DIR=/usr/local/share/zsh-syntax-highlighting/highlighters
[ -f ~/.fzf.zsh ] && source ~/.fzf.zsh

##############################
#  ZSH Syntax Highlightling  #
##############################

source /usr/local/share/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh

###############
#  Powerline  #
###############

powerline-daemon -q
#. ~/Apps/powerline/powerline/bindings/zsh/powerline.zsh
. /Library/Python/2.7/site-packages/powerline/bindings/zsh/powerline.zsh

###############
#  Profile.d  #
###############

for sh in /etc/profile.d/*.sh ; do
    [ -r "$sh"  ] && . "$sh"
done
unset sh

###############
#  gitignore  #
###############

function gi() { curl -L -s https://www.gitignore.io/api/$@ ;}

#######################################################################
#                      User configuration - End                       #
#######################################################################

#######################################################################
#                      Useful Functions - Start                       #
#######################################################################

############################
#  decompress every thing  #
############################

extract () {
    if [ -f $1 ] ; then
        case $1 in
            *.tar.bz2)        tar xjf $1        ;;
            *.tar.gz)         tar xzf $1        ;;
            *.bz2)            bunzip2 $1        ;;
            *.rar)            unrar x $1        ;;
            *.gz)             gunzip $1         ;;
            *.tar)            tar xf $1         ;;
            *.tbz2)           tar xjf $1        ;;
            *.tgz)            tar xzf $1        ;;
            *.zip)            unzip $1          ;;
            *.Z)              uncompress $1     ;;
            *.7z)             7zr e $1          ;;
            *)                echo "'$1' cannot be extracted via extract()" ;;
        esac
    else
        echo "'$1' is not a valid file"
    fi
}

##################
#  directory LS  #
##################

dls () {
    echo `ls -l | grep "^d" | awk '{ print $9 }' | tr -d "/"`
}

###################################################################
#  A recursive, case-insensitive grep that excludes binary files  #
###################################################################

dgrep() {
    grep -iR "$@" * | grep -v "Binary"
}

###################################################################
#  A recursive, case-insensitive grep that excludes binary files  #
#  and returns only unique filenames                              #
###################################################################

dfgrep() {
    grep -iR "$@" * | grep -v "Binary" | sed 's/:/ /g' | awk '{ print $1 }' | sort | uniq
}

############################
#  grep current processes  #
############################

psgrep() {
    if [ ! -z $1 ] ; then
        echo "Grepping for processes matching $1..."
        ps aux | grep $1 | grep -v grep
    else
        echo "!! Need name to grep for"
    fi
}

################################
#  fshow - git commit browser  #
################################

#
# https://gist.github.com/akatrevorjay/9fc061e8371529c4007689a696d33c62
# https://asciinema.org/a/101366
#

fshow() {
	local g=(
		git log
		--graph
		--format='%C(auto)%h%d %s %C(white)%C(bold)%cr'
		--color=always
		"$@"
	)

	local fzf=(
		fzf
		--ansi
		--reverse
		--tiebreak=index
		--no-sort
		--bind=ctrl-s:toggle-sort
		--preview 'f() { set -- $(echo -- "$@" | grep -o "[a-f0-9]\{7\}"); [ $# -eq 0 ] || git show --color=always $1; }; f {}'
	)
	$g | $fzf
}

#######################################################################
#                       Useful Functions - End                        #
#######################################################################
